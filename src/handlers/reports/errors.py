from aiogram import Dispatcher
from aiogram.types import Update

from shortcuts import get_message
from utils import exceptions

__all__ = ('register_handlers',)


async def on_dodo_api_error(update: Update, exception):
    text = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ Dodo API üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑'
    if update.message is not None:
        await update.message.reply(text)
    elif update.callback_query is not None:
        await update.callback_query.answer(text, show_alert=True)
    return True


async def on_auth_api_error(update: Update, exception):
    text = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑'
    if update.message is not None:
        await update.message.reply(text)
    elif update.callback_query is not None:
        await update.callback_query.answer(text, show_alert=True)
    return True


async def on_no_enabled_units_error(update: Update, exception):
    await get_message(update).answer(
        '–ö–∞–∂–µ—Ç—Å—è –≤—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω—É —Ç–æ—á–∫—É –ø—Ä–æ–¥–∞–∂ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è üòï\n'
        '–ß—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /settings.\n'
        '–î–∞–ª–µ–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –û—Ç—á—ë—Ç—ã –ø–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –∏ –æ—Ç–º–µ—Ç—å—Ç–µ —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂.')
    return True


def register_handlers(dispatcher: Dispatcher):
    dispatcher.register_errors_handler(
        on_dodo_api_error,
        exception=exceptions.DodoAPIError,
    )
    dispatcher.register_errors_handler(
        on_auth_api_error,
        exception=exceptions.AuthAPIError,
    )
    dispatcher.register_errors_handler(
        on_no_enabled_units_error,
        exception=exceptions.NoEnabledUnitsError,
    )
